# -*- coding: utf-8 -*-
"""8_MNIST_CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18ZX1vMri09s9pEvsKtgoRwYQme7cYFre
"""

#구글에서 제공하는 GPU를 이용해서 계산하기
!pip install tensorflow-gpu==2.2.0

# 패키지 불러오기

from keras.utils import to_categorical
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense, Conv2D, MaxPool2D, Flatten, Dropout

import numpy as np

# 이미지의 폭과 너비를 지정한 변수
width = 28
height = 28

# 데이터 로드하기
(X_train, y_train), (X_test, y_test) = mnist.load_data()

X_train.shape, y_train.shape, X_test.shape, y_test.shape

y_train[0]

import matplotlib.pyplot as plt

plt.imshow(X_train[1])
plt.title("Correct : " + str(y_train[1]))
plt.show()

# 데이터를 스케일링 + 리쉐이프 + 타입 변환
X_train = X_train.reshape(60000, width, height, 1).astype('float32') / 255.0
X_test = X_test.reshape(10000, width, height, 1).astype('float32') / 255.0

# y값 onehot encoding
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)
y_train[0]

# 모델 만들기 : 미완성
# CNN (컨벌루셔널 뉴럴 네트워크 : Convolutional Neural Network)
model = Sequential()
model.add(Conv2D(32, (3, 3), activation="relu", input_shape=(width, height, 1)))
model.add(Conv2D(32, (3, 3), activation="relu"))
model.add(MaxPool2D(pool_size=(2, 2)))

model.add(Flatten()) # 이 작업이 끝나면 
model.add(Dense(256, activation="relu")) 

model.add(Dense(10, activation="softmax"))

