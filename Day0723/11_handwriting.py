# -*- coding: utf-8 -*-
"""11_HandWriting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fWZ32Q7t5AhCEKafs_XvhR6dE4kk8i5o
"""

! pip install tensorflow-gpu==2.0.0

# 패키지 불러오기

from keras.models import Sequential
from keras.layers import Conv2D, MaxPool2D, Dense, Flatten
from keras.preprocessing.image import ImageDataGenerator

import numpy as np
import os 

os.getcwd()

from google.colab import drive
drive.mount('/content/drive')

# 랜덤 시드 고정
np.random.seed(3)

#1. 데이터 생성
train_data = ImageDataGenerator(rescale=1/225.0)

train_generator = train_data.flow_from_directory('drive/My Drive/data/hard_handwriting_shape/train',
                                                 target_size=(24, 24), batch_size=3, class_mode='categorical')

test_data = ImageDataGenerator(rescale=1/225.0)

test_generator = test_data.flow_from_directory('drive/My Drive/data/hard_handwriting_shape/test',
                                                 target_size=(24, 24), batch_size=3, class_mode='categorical')

type(test_generator)

# 2. 모델 만들기

model = Sequential()

model.add(Conv2D(32, (3, 3), activation='relu', input_shape=(24, 24, 3)))
model.add(Conv2D(64, (3, 3), activation='relu'))
model.add(MaxPool2D(pool_size=(2, 2)))

model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dense(3, activation='softmax'))

# 컴파일
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit_generator(generator=train_generator,
                    steps_per_epoch=15,
                    epochs=50,
                    validation_data=test_generator,
                    validation_steps=5)

eval = model.evaluate_generator(test_generator)
print(eval[0], eval[1]) # loss, acc

