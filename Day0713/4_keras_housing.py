# -*- coding: utf-8 -*-
"""4_Keras_Housing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AaqpIHfMxqGNH_Zp1rYesxJzHROhh94y
"""

from keras.models import Sequential
from keras.layers import Dense

from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
import numpy as np
import pandas as pd

# Data Fetch
housing = fetch_california_housing()
housing

X = housing.data
y = housing.target

housing_data = pd.DataFrame(X, columns=housing.feature_names)
housing_data['Price'] = y

housing_data

housing_data = housing_data.drop(['Latitude', 'Longitude'], axis=1) # 0은 열, 1은 행

housing_data

X = housing_data.iloc[:, 0 : 6]
y = housing_data['Price']

X

y

# 학습과 데이터를 나눔 70 : 30
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 10)

print('X_train shape : ', X_train.shape)
print('y_train shape : ', y_train.shape) #선형 -> Linear, 분류 -> sigmoid
print('X_test shape : ', X_test.shape)
print('y_test shape : ', y_test.shape)

model = Sequential()
model.add(Dense(32, activation='relu', input_dim=6))
model.add(Dense(100, activation='relu'))
model.add(Dense(1, activation='linear'))
model.summary()

model.compile(optimizer='sgd', loss='mse', metrics=['accuracy'])

# 학습
model.fit(X_train, y_train, epochs=50, batch_size=32, verbose=1)

score = model.evaluate(X_test, y_test, verbose=1)
print('Loss : ',score[0])
print('Accuaracy', score[1])

"""1) 위도, 경도를 없앰
2) 값의 편차가 크지 않도록 함 : 스케일링(StandardScaling)
"""

